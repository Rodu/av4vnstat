SETUP

First of all it is necessary to install vnstat.
On a Debian based Linux distribution this is done with a:

$ sudo apt-get install vnstat

Next you need to initialize the vnstat db and inform vnstat about the network
card you want to record the traffic from.

Note: We are not talking about network traffic sniffing!
      See the vnstat manual for details or visit the vnStat project home page at
      http://humdi.net/vnstat/

Assuming you want to monitor the eth1 (any interface can be monitored giving the
proper name) you need to issue:

$ sudo vnstat -u -i eth1

At this point vnstat will start to monitor the network interface at regular
intervals and will build its own data file.

To show the data grabbed so far you can give from the terminal the command:

$ vnstat -i eth1

Now you can change the configuration for the Python program in the file:

av4vnstat.cfg

that comes with the download.


You need to change the value 'eth1' indicated at the line:

network_card = "eth1"

to the one you gave to vnstat above during the initialization, if you are monitoring
a different network interface.

Once vnstat is installed and enough data have been collected (to be returned)
you can execute the python script 'dsbuilder.py' to let it create the JS dataset.

Alternatively, you can create a cron entry to run the python script on a scheduled time interval.
To do this an entry in the crontab can be created where the script is executed each 15 minutes.

$ crontab -e

will open the cron editor and in there you can add a line like:

15 * * * * /home/pluto/run/dsbuilder.py

Note the path needs to be changed to point to the python script properly.
In the example we assume to have a folder named run under the pluto's home.

Once all this is done and vnstat has enough data to show (after a while) you can run
the av4vnstat.html and see the results in the Stacked Bars visualization.

You can also launch the example.html in the browser to see what the result could look like.

This is a simple project but things can become more interesting as the data collected
grows with time and more features can be added for experimental pourposes.
